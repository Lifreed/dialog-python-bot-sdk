from typing import List
from dialog_api import groups_pb2
from dialog_api.groups_pb2 import GROUPADMINPERMISSION_EDITSHORTNAME, GROUPADMINPERMISSION_INVITE, \
    GROUPADMINPERMISSION_KICK, GROUPADMINPERMISSION_UPDATEINFO, GROUPADMINPERMISSION_SETPERMISSIONS, \
    GROUPADMINPERMISSION_EDITMESSAGE, GROUPADMINPERMISSION_DELETEMESSAGE, GROUPADMINPERMISSION_GETINTEGRATIONTOKEN, \
    GROUPADMINPERMISSION_SENDMESSAGE, GROUPADMINPERMISSION_PINMESSAGE, GROUPADMINPERMISSION_VIEWMEMBERS


class GroupPermission:
    GROUPADMINPERMISSION_EDITSHORTNAME = GROUPADMINPERMISSION_EDITSHORTNAME
    GROUPADMINPERMISSION_INVITE = GROUPADMINPERMISSION_INVITE
    GROUPADMINPERMISSION_KICK = GROUPADMINPERMISSION_KICK
    GROUPADMINPERMISSION_UPDATEINFO = GROUPADMINPERMISSION_UPDATEINFO
    GROUPADMINPERMISSION_SETPERMISSIONS = GROUPADMINPERMISSION_SETPERMISSIONS
    GROUPADMINPERMISSION_EDITMESSAGE = GROUPADMINPERMISSION_EDITMESSAGE
    GROUPADMINPERMISSION_DELETEMESSAGE = GROUPADMINPERMISSION_DELETEMESSAGE
    GROUPADMINPERMISSION_GETINTEGRATIONTOKEN = GROUPADMINPERMISSION_GETINTEGRATIONTOKEN
    GROUPADMINPERMISSION_SENDMESSAGE = GROUPADMINPERMISSION_SENDMESSAGE
    GROUPADMINPERMISSION_PINMESSAGE = GROUPADMINPERMISSION_PINMESSAGE
    GROUPADMINPERMISSION_VIEWMEMBERS = GROUPADMINPERMISSION_VIEWMEMBERS


class Permissions:
    def __init__(self, user_id: int, permissions: List[GroupPermission]) -> None:
        self.user_id = user_id
        self.permissions = permissions

    @classmethod
    def from_api(cls, permissions: groups_pb2.GroupMemberPermission) -> 'Permissions':
        return cls(permissions.user_id, [x for x in permissions.permissions])

    def __dict__(self):
        return {"user_id": self.user_id, "permissions": self.permissions}

    def __str__(self):
        return "Permissions({})".format(self.__dict__())
